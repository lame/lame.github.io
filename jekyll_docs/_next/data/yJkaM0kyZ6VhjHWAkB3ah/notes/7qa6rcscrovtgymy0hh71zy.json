{"pageProps":{"note":{"id":"7qa6rcscrovtgymy0hh71zy","title":"Case_Based_Reasoning","desc":"","updated":1708632815303,"created":1703613636290,"custom":{},"fname":"School.KBAI.Analogical_Reasoning.Case_Based_Reasoning","type":"note","vault":{"fsPath":".","selfContained":true,"name":"notes"},"contentHash":"b8684b08c5ed2ee24f0d40d70f7fb87e","links":[],"anchors":{"adaptation":{"type":"header","text":"Adaptation","value":"adaptation","line":22,"column":0,"depth":2},"model-based-method":{"type":"header","text":"Model Based Method","value":"model-based-method","line":26,"column":0,"depth":3},"recursive-retrieval":{"type":"header","text":"Recursive retrieval","value":"recursive-retrieval","line":32,"column":0,"depth":3},"heuristics--rules":{"type":"header","text":"Heuristics / Rules","value":"heuristics--rules","line":39,"column":0,"depth":3},"storage":{"type":"header","text":"Storage","value":"storage","line":46,"column":0,"depth":2},"indexing":{"type":"header","text":"Indexing","value":"indexing","line":48,"column":0,"depth":3},"discrimination-tree":{"type":"header","text":"Discrimination Tree","value":"discrimination-tree","line":53,"column":0,"depth":3}},"children":[],"parent":"nn5xa88vksjcijal3jstdtu","data":{}},"body":"<h1 id=\"case_based_reasoning\">Case_Based_Reasoning<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#case_based_reasoning\"></a></h1>\n<p>Process of case-based reasoning:</p>\n<p>1) Retrieval: think knn for retrieving a recorded case\n2) Adaptation: Adapt the prior solution to fit the current problem\n3) Evaluation: How well will the adapted solution address the current problem\n4) Storage: Store new case back into case-based reasoning repository</p>\n<p>Assumptions:</p>\n<ul>\n<li>Patterns exist in the world</li>\n<li>Similar problems have similar solutions</li>\n</ul>\n<p>Failed cases are useful to store as well</p>\n<h2 id=\"adaptation\">Adaptation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#adaptation\"></a></h2>\n<p>problem: Get from point A to point C</p>\n<h3 id=\"model-based-method\">Model Based Method<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#model-based-method\"></a></h3>\n<p>1) Retrieval finds a route from A to B\n2) Adaptation continues from B to C using a model of the streets\n3) Evaluation shows that A to C is satistied</p>\n<h3 id=\"recursive-retrieval\">Recursive retrieval<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#recursive-retrieval\"></a></h3>\n<p>1) No route from A to C\n2) Retrieve route from A to B (partial solution)\n3) Make new problem: Find route from B to C\n4) Retrieve route from B to C</p>\n<h3 id=\"heuristics--rules\">Heuristics / Rules<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#heuristics--rules\"></a></h3>\n<p>problem: Get from point C to point A</p>\n<p>1) Retrieve route from A to C\n2) Reverse route to C to A - This may not work (think 1-way streets)</p>\n<h2 id=\"storage\">Storage<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#storage\"></a></h2>\n<h3 id=\"indexing\">Indexing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#indexing\"></a></h3>\n<ul>\n<li>route beginning x, y coordinates can be index key</li>\n<li>Additionally, things like speed, scenic, etc can be added to make a richer index</li>\n</ul>\n<h3 id=\"discrimination-tree\">Discrimination Tree<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#discrimination-tree\"></a></h3>\n<p>A binary search tree of yes/no answers. Every time that a single node has multiple\nbranches pointing to it a new y/n question is created to split them.</p>\n<p>Doesn't have to be a binary tree, however each leaf has to have only one branch to it.</p>\n<p><img src=\"/./assets/discrimination_tree.png\" alt=\"discrimination tree diagram\"></p>","noteIndex":{"id":"tnnw3egk8r06crz3yy17h9s","title":"Root","desc":"","updated":1703610625261,"created":1703610625261,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"notes"},"contentHash":"e73e27f3d623ae8b7915aa670b746db2","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":1},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":2}},"children":["ludzi9gs8nne0hesa50nnsp"],"parent":null,"data":{},"body":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":true,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"notes"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":true,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":true,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://lame.github.io","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}