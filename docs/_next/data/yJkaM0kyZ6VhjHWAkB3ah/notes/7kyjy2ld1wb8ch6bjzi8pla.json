{"pageProps":{"note":{"id":"7kyjy2ld1wb8ch6bjzi8pla","title":"Frames","desc":"","updated":1703613532328,"created":1703613532328,"custom":{},"fname":"School.KBAI.Common_Sense_Reasoning.Frames","type":"note","vault":{"fsPath":".","selfContained":true,"name":"notes"},"contentHash":"abcbe57ed089c5f13f022f54a4846a65","links":[],"anchors":{"structure-of-frames":{"type":"header","text":"Structure of Frames","value":"structure-of-frames","line":17,"column":0,"depth":2},"properties-of-frames":{"type":"header","text":"Properties of Frames","value":"properties-of-frames","line":51,"column":0,"depth":2},"representations":{"type":"header","text":"Representations","value":"representations","line":77,"column":0,"depth":2},"story-understanding":{"type":"header","text":"Story Understanding","value":"story-understanding","line":86,"column":0,"depth":2}},"children":[],"parent":"avyt37mzocl9chcm1lzkkr1","data":{}},"body":"<h1 id=\"frames\">Frames<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#frames\"></a></h1>\n<p>A structured knowledge representation, \"the meaning of the meaning\"</p>\n<p>Think that a frame is a molecule rather than an atom</p>\n<p>Cognative processing w/ frames is bottom up (from natural languang to representation)\nand top down (from memory to structured representation).</p>\n<p>Stereotypes are cognatively efficient, so frames represent stereotypes</p>\n<h2 id=\"structure-of-frames\">Structure of Frames<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#structure-of-frames\"></a></h2>\n<p>A frame is a knowledge structure</p>\n<pre><code>Ashok ate a frog:\n\nAte (verb frame)\n    Subject: Ashok\n    Object: Frog\n    Location: Stomach (now)\n    Time: past\n    Utensils: ?\n    Object-Alive: False\n    Object-is: in-subject\n    Subject-mood: Happy\n\n</code></pre>\n<p>Slots (Subject, Object, etc.) &#x26; Fillers (Ashok, Frog, etc.)</p>\n<p>Slots on a frame can have a pointer to another frame, for instance the <code>Subject</code>\nslot above could point to a noun-frame of Ashok. Allows for a discourse level\nunderstanding rather than a sentence level understanding.</p>\n<pre><code>Ate (verb)\n    Subject: -> Ashok\n\nAshok (noun)\n    Title: Professor\n    Location: Atlanta, GA\n</code></pre>\n<h2 id=\"properties-of-frames\">Properties of Frames<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#properties-of-frames\"></a></h2>\n<ul>\n<li>Frames represent stereotypes of the key word for the frame, like <code>Ate</code></li>\n<li>Provides default values</li>\n<li>Takes advantage of inheritance and instances</li>\n</ul>\n<pre><code>Animal\n    num-arms: (default value)\n    num-legs: (default value)\n\nHuman (type of animal) - Class\n    num-arms: 2\n    num-legs: 2\n    job:\n    name:\n\nHuman (type of animal) - Instance\n    num-arms: 2\n    num-legs: 2\n    job: Professor\n    name: Ashok\n</code></pre>\n<ul>\n<li>Frames can be used to as a structured representation to store a sentence of input, and can be used to generate a sentence of output.</li>\n</ul>\n<h2 id=\"representations\">Representations<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#representations\"></a></h2>\n<p>Similar to semantic nets, production systems</p>\n<p><img src=\"/./assets/Procedural_frame.png\" alt=\"Procedural frame\"></p>\n<p>1) Ate gets added to the working memory\n2) The slots and default filler values get loaded from semantic memory into working mem</p>\n<h2 id=\"story-understanding\">Story Understanding<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#story-understanding\"></a></h2>","noteIndex":{"id":"tnnw3egk8r06crz3yy17h9s","title":"Root","desc":"","updated":1703610625261,"created":1703610625261,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"notes"},"contentHash":"e73e27f3d623ae8b7915aa670b746db2","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":1},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":2}},"children":["ludzi9gs8nne0hesa50nnsp"],"parent":null,"data":{},"body":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":true,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"notes"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":true,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":true,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://lame.github.io","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}