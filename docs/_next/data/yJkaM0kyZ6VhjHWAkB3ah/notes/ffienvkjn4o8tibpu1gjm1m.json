{"pageProps":{"note":{"id":"ffienvkjn4o8tibpu1gjm1m","title":"Production_Systems","desc":"","updated":1704474268797,"created":1703613445723,"custom":{},"fname":"School.KBAI.Fundamentals.Production_Systems","type":"note","vault":{"fsPath":".","selfContained":true,"name":"notes"},"contentHash":"b2291cb226704d0be1ab9a2a7ab3dda9","links":[],"anchors":{"cognative-architecture":{"type":"header","text":"Cognative Architecture","value":"cognative-architecture","line":8,"column":0,"depth":2},"soar":{"type":"header","text":"SOAR","value":"soar","line":33,"column":0,"depth":3},"production-systems":{"type":"header","text":"Production Systems","value":"production-systems","line":47,"column":0,"depth":2},"action-selection":{"type":"header","text":"Action Selection","value":"action-selection","line":68,"column":0,"depth":2},"chunking":{"type":"header","text":"Chunking","value":"chunking","line":74,"column":0,"depth":2},"misc":{"type":"header","text":"Misc","value":"misc","line":79,"column":0,"depth":2}},"children":[],"parent":"sn70ljist4zuj1t19187n8j","data":{}},"body":"<h1 id=\"production_systems\">Production_Systems<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#production_systems\"></a></h1>\n<h2 id=\"cognative-architecture\">Cognative Architecture<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cognative-architecture\"></a></h2>\n<ul>\n<li>A cognative agent is a function <code>f</code> that maps a perceptual history <code>P*</code> to an action <code>A</code>.</li>\n<li>Percepts -> Actions</li>\n<li>The <code>*</code> stands for \"history\"</li>\n</ul>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo>:</mo><msup><mi>P</mi><mo>∗</mo></msup><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">f: P^* \\rightarrow A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7387em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7387em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span></span></div>\n<p>Assumptions of Cognative Architectures:</p>\n<ul>\n<li>Goal-oriented</li>\n<li>Rich, complex environments</li>\n<li>Significant knowledge</li>\n<li>Represented at a level of abstraction, symbols</li>\n<li>Respond flexibly to a changing environment</li>\n<li>Learn from their experiences</li>\n</ul>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>Architecture</mtext><mo>+</mo><mtext>Content</mtext><mo>=</mo><mtext>Behavior</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Architecture} + \\text{Content} = \\text{Behavior}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord text\"><span class=\"mord\">Architecture</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord\">Content</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">Behavior</span></span></span></span></span></span></div>\n<p>If architecture is fixed, then we only need to change the knowedge content of the agent to achieve different behaviors.</p>\n<h3 id=\"soar\">SOAR<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#soar\"></a></h3>\n<p><img src=\"/./assets/SOAR.png\" alt=\"SOAR\"></p>\n<p>Consists of a <strong>long term memory</strong> portion</p>\n<ul>\n<li>Procedural knowledge (how to pour water into a container)</li>\n<li>Semantic knowledge (concepts and models of the environment, model of how a plane flies in the air)</li>\n<li>Episodic knowledge (events, think what was for dinner yesterday)</li>\n</ul>\n<p>and <strong>short term memory</strong></p>\n<ul>\n<li>Working memory</li>\n</ul>\n<h2 id=\"production-systems\">Production Systems<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#production-systems\"></a></h2>\n<p>Levels of Abstraction:</p>\n<ul>\n<li>\n<p><strong>High</strong> - Task / Knowledge Level</p>\n</li>\n<li>\n<p><strong>Mid</strong> - Algorithm / Symbol Level</p>\n</li>\n<li>\n<p><strong>Low</strong> - Hardware / Implementation Level</p>\n</li>\n<li>\n<p>Low level provides architecture for higher levels up ladder</p>\n</li>\n<li>\n<p>High level provides content for lower levels down ladder</p>\n</li>\n</ul>\n<p>Working Memory Cycle</p>\n<ul>\n<li>Working memory is the state of the system</li>\n<li>Long term memory can consist of \"production rules\"</li>\n<li>Based on long-term memory some rules get activated</li>\n<li>Rules which are activated consequences get established</li>\n<li>Consequences that are established mutate working memory</li>\n</ul>\n<p>If SOAR reaches a state that it cannot determine an action for, it will envoke episodic knowledge to try and learn a new behavior</p>\n<h2 id=\"action-selection\">Action Selection<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#action-selection\"></a></h2>\n<p>Mapping percepts in the world into actions</p>\n<ul>\n<li>Percepts from the world into a pitch selection</li>\n</ul>\n<h2 id=\"chunking\">Chunking<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#chunking\"></a></h2>\n<ul>\n<li>A <strong>learning technique</strong> that SOAR uses to overcome impasses</li>\n<li>Uses episodic memory to find an event in the past that is related to current percepts and leverages the previous event into a new rule</li>\n</ul>\n<h2 id=\"misc\">Misc<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#misc\"></a></h2>\n<p>Reasoning first, then work backwards to learning</p>","noteIndex":{"id":"tnnw3egk8r06crz3yy17h9s","title":"Root","desc":"","updated":1703610625261,"created":1703610625261,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"notes"},"contentHash":"e73e27f3d623ae8b7915aa670b746db2","links":[],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":1},"lookup":{"type":"header","text":"Lookup","value":"lookup","line":11,"column":0,"depth":2}},"children":["ludzi9gs8nne0hesa50nnsp"],"parent":null,"data":{},"body":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":true,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"notes"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":true,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":true,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://lame.github.io","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}